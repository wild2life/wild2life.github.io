import{_ as s,h as a,o as i,aa as n}from"./chunks/framework.CMyQ9WBu.js";const u=JSON.parse('{"title":"Git 修改历史 commits 中的用户名和邮箱","description":"","frontmatter":{},"headers":[],"relativePath":"daily-notes/issue-4.md","filePath":"daily-notes/issue-4.md","lastUpdated":null}'),e={name:"daily-notes/issue-4.md"},l=n(`<h1 id="git-修改历史-commits-中的用户名和邮箱" tabindex="-1">Git 修改历史 commits 中的用户名和邮箱 <a class="header-anchor" href="#git-修改历史-commits-中的用户名和邮箱" aria-label="Permalink to &quot;Git 修改历史 commits 中的用户名和邮箱&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/wild2life/daily-notes/issues/4" target="_blank" rel="noreferrer">Git 修改历史 commits 中的用户名和邮箱 | GitHub</a></p></div><h2 id="确认本地全局邮箱-用户名" tabindex="-1">确认本地全局邮箱/用户名 <a class="header-anchor" href="#确认本地全局邮箱-用户名" aria-label="Permalink to &quot;确认本地全局邮箱/用户名&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (--global) user.name </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (--global) user.email</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="批量修改历史记录中的信息" tabindex="-1">批量修改历史记录中的信息 <a class="header-anchor" href="#批量修改历史记录中的信息" aria-label="Permalink to &quot;批量修改历史记录中的信息&quot;">​</a></h2><p>打开一个文本编辑器，粘贴下面代码。 然后把 OLD_EMAIL，CORRECT_NAME，CORRECT_EMAIL 改成自己的新旧邮箱用户名。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filter-branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">OLD_EMAIL=&quot;原来的邮箱&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CORRECT_NAME=&quot;现在的名字&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CORRECT_EMAIL=&quot;现在的邮箱&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">fi</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">fi</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tag-name-filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --branches</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tags</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>回到 git bash 界面，复制粘贴上面的代码并按回车执行</p><blockquote><p>如果上面的批量修改命令执行失败的话，执行一下这段命令：</p></blockquote><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filter-branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --index-filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;git rm --cached --ignore-unmatch Rakefile&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEA</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>强制提交 <code>git push origin --force --all</code></p><h2 id="linux-mac下可以写个脚本" tabindex="-1">Linux/Mac下可以写个脚本 <a class="header-anchor" href="#linux-mac下可以写个脚本" aria-label="Permalink to &quot;Linux/Mac下可以写个脚本&quot;">​</a></h2><p>根目录下创建<code>git-email.sh</code></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 然后需要赋予执行权限：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git-email.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 执行一下这个</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./git-email.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>如果是在Windows环境下，在CMD窗口是无法直接执行 ./test.sh 的， 这时候可以通过 <a href="https://www.git-scm.com/download/" target="_blank" rel="noreferrer">GIT</a> 工具来运行 切到test.sh所在位置，在空白处，右键选择Git Bash Here，直接执行 ./test.sh 就行了</p></blockquote>`,15),t=[l];function p(h,r,k,c,d,o){return i(),a("div",null,t)}const g=s(e,[["render",p]]);export{u as __pageData,g as default};
