import{_ as s,h as a,o as i,aa as e}from"./chunks/framework.CMyQ9WBu.js";const g=JSON.parse('{"title":"chrome debugger 技巧","description":"","frontmatter":{},"headers":[],"relativePath":"workflow/chrome/debugger.md","filePath":"workflow/chrome/debugger.md","lastUpdated":1761631242000}'),l={name:"workflow/chrome/debugger.md"},t=e('<h1 id="chrome-debugger-技巧" tabindex="-1">chrome debugger 技巧 <a class="header-anchor" href="#chrome-debugger-技巧" aria-label="Permalink to &quot;chrome debugger 技巧&quot;">​</a></h1><ul><li><a href="https://developers.google.com/web/tools/chrome-devtools/?hl=zh-cn" target="_blank" rel="noreferrer">developers</a></li><li>Open Chrome DevTools <code>Ctrl+Shift+I</code> (Windows) 或 <code>Cmd+Opt+I</code> (Mac)</li></ul><h2 id="🔥-console" tabindex="-1">🔥 console <a class="header-anchor" href="#🔥-console" aria-label="Permalink to &quot;🔥 console&quot;">​</a></h2><h3 id="✅-console-log" tabindex="-1">✅ console.log({}) <a class="header-anchor" href="#✅-console-log" aria-label="Permalink to &quot;✅ console.log({})&quot;">​</a></h3><p>在使用 console.log();的时候，不仅仅打印变量，而是要打印对象，用大括号({})将变量包围起来。这样的优点是不仅会把变量的值打印，同时还会将变量名打印出来。</p><h3 id="✅-console-table-格式化数据" tabindex="-1">✅ <code>console.table</code> 格式化数据 <a class="header-anchor" href="#✅-console-table-格式化数据" aria-label="Permalink to &quot;✅ `console.table` 格式化数据&quot;">​</a></h3><p>打印数组或对象时，console.table() 比 console.log() 直观得多：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, city: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;北京&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bob&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, city: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;上海&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(users);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>📌效果：以表格形式显示数据，方便查看。</p><h3 id="✅-0-4-快捷访问-dom" tabindex="-1">✅ <code>$0 - $4</code> 快捷访问 DOM <a class="header-anchor" href="#✅-0-4-快捷访问-dom" aria-label="Permalink to &quot;✅ `$0 - $4` 快捷访问 DOM&quot;">​</a></h3><ul><li>$0 代表 Elements 面板中选中的元素。</li><li>$1 - $4 代表最近访问过的 4 个元素。</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$0.style.border </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2px solid red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 给选中的元素加红色边框</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="✅-复制对象到剪贴板" tabindex="-1">✅ 复制对象到剪贴板 <a class="header-anchor" href="#✅-复制对象到剪贴板" aria-label="Permalink to &quot;✅ 复制对象到剪贴板&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>📌 用途：快速复制 JSON 数据，粘贴到其他地方（如 VS Code）。</p><h3 id="✅-monitorevents-监听-dom-事件" tabindex="-1">✅ <code>monitorEvents()</code> 监听 DOM 事件 <a class="header-anchor" href="#✅-monitorevents-监听-dom-事件" aria-label="Permalink to &quot;✅ `monitorEvents()` 监听 DOM 事件&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">monitorEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.body, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>📌 用途：查看所有 click 事件，适用于调试事件监听。</p><p>停止监听：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unmonitorEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.body, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="✅-控制台引用上一次执行的结果" tabindex="-1">✅ <code>$_</code>控制台引用上一次执行的结果 <a class="header-anchor" href="#✅-控制台引用上一次执行的结果" aria-label="Permalink to &quot;✅ `$_`控制台引用上一次执行的结果&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wildlife&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [&#39;w&#39;, &#39;i&#39;, &#39;l&#39;, &#39;d&#39;, &#39;l&#39;, &#39;i&#39;, &#39;f&#39;, &#39;e&#39;]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$_.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [&#39;e&#39;, &#39;f&#39;, &#39;i&#39;, &#39;l&#39;, &#39;d&#39;, &#39;l&#39;, &#39;i&#39;, &#39;w&#39;]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$_.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;e,f,i,l,d,l,i,w&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="🎨-elements-面板技巧" tabindex="-1">🎨 Elements 面板技巧 <a class="header-anchor" href="#🎨-elements-面板技巧" aria-label="Permalink to &quot;🎨 Elements 面板技巧&quot;">​</a></h2><h3 id="✅-快速修改-css" tabindex="-1">✅ 快速修改 CSS <a class="header-anchor" href="#✅-快速修改-css" aria-label="Permalink to &quot;✅ 快速修改 CSS&quot;">​</a></h3><p>双击元素 直接编辑 HTML。 双击 CSS 样式 立即修改，无需刷新页面。 按住 Alt + 鼠标滚轮 可以调整数值大小（如 margin: 10px）。</p><h3 id="✅-在-console-选中某个元素" tabindex="-1">✅ 在 Console 选中某个元素 <a class="header-anchor" href="#✅-在-console-选中某个元素" aria-label="Permalink to &quot;✅ 在 Console 选中某个元素&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;//button[text()=&#39;登录&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通过 XPath 选中按钮</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通过 CSS 选择器</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>📌 用途：在 Console 里快速操作页面元素。</p><h2 id="🌍-network-面板技巧" tabindex="-1">🌍 Network 面板技巧 <a class="header-anchor" href="#🌍-network-面板技巧" aria-label="Permalink to &quot;🌍 Network 面板技巧&quot;">​</a></h2><h3 id="✅-复制-api-请求" tabindex="-1">✅ 复制 API 请求 <a class="header-anchor" href="#✅-复制-api-请求" aria-label="Permalink to &quot;✅ 复制 API 请求&quot;">​</a></h3><p>在 Network 面板： 右键点击请求 → Copy as cURL 在终端执行 curl 命令，快速复现请求：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://api.example.com/data&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Authorization: Bearer abc123&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>📌 用途：调试 API 请求，模拟请求数据。</p><h3 id="✅-一键重新发起请求" tabindex="-1">✅ 一键重新发起请求 <a class="header-anchor" href="#✅-一键重新发起请求" aria-label="Permalink to &quot;✅ 一键重新发起请求&quot;">​</a></h3><ol><li>选中<strong>Network</strong></li><li>点击<strong>Fetch/XHR</strong></li><li>选择要重新发送的请求</li><li>右键选择<strong>Replay XHR</strong></li></ol><h3 id="✅-拦截并修改-api-响应" tabindex="-1">✅ 拦截并修改 API 响应 <a class="header-anchor" href="#✅-拦截并修改-api-响应" aria-label="Permalink to &quot;✅ 拦截并修改 API 响应&quot;">​</a></h3><ol><li>右键请求 → Edit and Resend</li><li>修改 Header 或 Body，然后重新发送请求。</li></ol><p>📌 用途：测试不同参数对 API 的影响。</p><h3 id="✅-模拟慢网速" tabindex="-1">✅ 模拟慢网速 <a class="header-anchor" href="#✅-模拟慢网速" aria-label="Permalink to &quot;✅ 模拟慢网速&quot;">​</a></h3><ol><li>Network → No throttling</li><li>选择 Slow 3G / Fast 3G</li></ol><p>📌 用途：测试网页在低网速下的加载情况。</p><h2 id="⚡-performance-面板优化" tabindex="-1">⚡ Performance 面板优化 <a class="header-anchor" href="#⚡-performance-面板优化" aria-label="Permalink to &quot;⚡ Performance 面板优化&quot;">​</a></h2><h3 id="✅-分析页面性能" tabindex="-1">✅ 分析页面性能 <a class="header-anchor" href="#✅-分析页面性能" aria-label="Permalink to &quot;✅ 分析页面性能&quot;">​</a></h3><ol><li>打开 <code>Performance</code> 面板 → 点击 <code>Record</code></li><li>录制页面加载过程 → 找到耗时的任务（红色区域）</li></ol><p>📌 用途：查找影响页面性能的代码，如 layout shifts 和 render blocking。</p><h2 id="🔍-sources-面板技巧" tabindex="-1">🔍 Sources 面板技巧 <a class="header-anchor" href="#🔍-sources-面板技巧" aria-label="Permalink to &quot;🔍 Sources 面板技巧&quot;">​</a></h2><h3 id="✅-断点调试-javascript" tabindex="-1">✅ 断点调试 JavaScript <a class="header-anchor" href="#✅-断点调试-javascript" aria-label="Permalink to &quot;✅ 断点调试 JavaScript&quot;">​</a></h3><ol><li><p>右键行号 → <code>Add breakpoint</code></p></li><li><p>代码执行到该行时会暂停，你可以：</p></li></ol><ul><li>Step over (F10) 跳过当前函数</li><li>Step into (F11) 进入函数内部</li><li>Step out (Shift + F11) 退出函数</li></ul><p>📌 用途：查找 bug，比 console.log() 更高效。</p><h3 id="✅-在控制台修改-javascript-变量" tabindex="-1">✅ 在控制台修改 JavaScript 变量 <a class="header-anchor" href="#✅-在控制台修改-javascript-变量" aria-label="Permalink to &quot;✅ 在控制台修改 JavaScript 变量&quot;">​</a></h3><p>在断点调试时，可以直接修改变量：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">someVariable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;新值&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>📌 用途：实时修改代码逻辑，验证不同变量的影响。</p><h3 id="✅-暂停-ui-在-hover-状态下的展示结果" tabindex="-1">✅ 暂停 UI 在 Hover 状态下的展示结果 <a class="header-anchor" href="#✅-暂停-ui-在-hover-状态下的展示结果" aria-label="Permalink to &quot;✅ 暂停 UI 在 Hover 状态下的展示结果&quot;">​</a></h3><p>我们很难去检查一个只有在 Hover 状态下展示的元素。比如，如何去检查一个 tooltip？如果你右键并选择检查，元素已经消失了。那么有办法吗？</p><ol><li>打开 <code>sources</code> 面板</li><li>显示 <code>tooltip</code></li><li>使用快捷键来暂停脚本执行(将鼠标停留在暂停的图标上查看快捷键)</li><li>回到 Elements 面板，然后像通常一样去检查元素</li></ol><h2 id="🎭-lighthouse-进行网站性能分析" tabindex="-1">🎭 Lighthouse 进行网站性能分析 <a class="header-anchor" href="#🎭-lighthouse-进行网站性能分析" aria-label="Permalink to &quot;🎭 Lighthouse 进行网站性能分析&quot;">​</a></h2><p>在 Lighthouse 面板：</p><ol><li>选择 Performance、SEO、Accessibility 选项</li><li>点击 Generate Report</li></ol><p>📌 用途：自动分析网站的加载速度、可访问性、SEO 等问题。</p><h2 id="🔥-application-面板技巧" tabindex="-1">🔥 Application 面板技巧 <a class="header-anchor" href="#🔥-application-面板技巧" aria-label="Permalink to &quot;🔥 Application 面板技巧&quot;">​</a></h2><h3 id="✅-清理-local-storage-cookies" tabindex="-1">✅ 清理 Local Storage / Cookies <a class="header-anchor" href="#✅-清理-local-storage-cookies" aria-label="Permalink to &quot;✅ 清理 Local Storage / Cookies&quot;">​</a></h3><ul><li>Local Storage：右键 Clear</li><li>Cookies：右键 Delete 📌 用途：清理缓存，测试登录状态。</li></ul><h3 id="✅-直接修改-local-storage" tabindex="-1">✅ 直接修改 Local Storage <a class="header-anchor" href="#✅-直接修改-local-storage" aria-label="Permalink to &quot;✅ 直接修改 Local Storage&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;abc123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>📌 用途：模拟用户登录状态，无需重复输入密码。</p><h2 id="🚀-bonus-隐藏-修改页面内容" tabindex="-1">🚀 Bonus：隐藏/修改页面内容 <a class="header-anchor" href="#🚀-bonus-隐藏-修改页面内容" aria-label="Permalink to &quot;🚀 Bonus：隐藏/修改页面内容&quot;">​</a></h2><h3 id="✅-一键隐藏广告" tabindex="-1">✅ 一键隐藏广告 <a class="header-anchor" href="#✅-一键隐藏广告" aria-label="Permalink to &quot;✅ 一键隐藏广告&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelectorAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.ad-banner&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">el</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> el.style.display </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>📌 用途：隐藏烦人的广告，专注调试页面。</p><h3 id="✅-修改网站文字" tabindex="-1">✅ 修改网站文字 <a class="header-anchor" href="#✅-修改网站文字" aria-label="Permalink to &quot;✅ 修改网站文字&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.body.innerHTML </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.body.innerHTML.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">旧文字</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;新文字&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>📌 用途：修改页面内容，测试多语言适配。</p><h2 id="🎯-开发者必备-chrome-扩展" tabindex="-1">🎯 开发者必备 Chrome 扩展 <a class="header-anchor" href="#🎯-开发者必备-chrome-扩展" aria-label="Permalink to &quot;🎯 开发者必备 Chrome 扩展&quot;">​</a></h2><table><thead><tr><th><strong>扩展名</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td><a href="https://chrome.google.com/webstore/detail/react-developer-tools/" target="_blank" rel="noreferrer">React Developer Tools</a></td><td>React 组件调试</td></tr><tr><td><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/" target="_blank" rel="noreferrer">Vue.js DevTools</a></td><td>Vue 组件调试</td></tr><tr><td><a href="https://chrome.google.com/webstore/detail/json-formatter/" target="_blank" rel="noreferrer">JSON Formatter</a></td><td>JSON 格式化</td></tr><tr><td><a href="https://chrome.google.com/webstore/detail/lighthouse/" target="_blank" rel="noreferrer">Lighthouse</a></td><td>网站性能优化</td></tr></tbody></table>',76),n=[t];function h(r,o,p,d,k,c){return i(),a("div",null,n)}const E=s(l,[["render",h]]);export{g as __pageData,E as default};
